{
	"info": {
		"_postman_id": "8dddc003-b4fa-4201-ba65-f9d306b76959",
		"name": "LAB1_AQA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12089052"
	},
	"item": [
		{
			"name": "Test Status Code 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/get?userId=333",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "userId",
							"value": "333"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test User Id 333",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test User Id is 333\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.args.userId).to.eql(\"333\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/get?userId=333",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "userId",
							"value": "333"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Title Field",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Title Test\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql(\"delectus aut autem\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Completed Field",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Completed field is false\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.completed).to.eql(false);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Response is not NULL",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Test Response has more than one element",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response more than one element\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).length.above(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Response has only elements for user with id = 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has only elements for user with id = 1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    for(var i = 0; i < jsonData.length; i++) {\r",
							"        pm.expect(jsonData[i].userId).is.eql(1);\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos?userId=1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos"
					],
					"query": [
						{
							"key": "userId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Response has only completed todos for user with id = 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has only completed elements for user with id = 1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    for(var i = 0; i < jsonData.length; i++) {\r",
							"        pm.expect(jsonData[i].userId).is.eql(1);\r",
							"        pm.expect(jsonData[i].completed).is.eql(true);\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos?completed=true&userId=1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos"
					],
					"query": [
						{
							"key": "completed",
							"value": "true"
						},
						{
							"key": "userId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Response has only completed todos for all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has only completed elements\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    for(var i = 0; i < jsonData.length; i++) {\r",
							"        pm.expect(jsonData[i].completed).is.eql(true);\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos?completed=true",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos"
					],
					"query": [
						{
							"key": "completed",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Response has only one element with id = 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test Response has only one element with id = 1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"    pm.expect(jsonData).is.not.eql(Array)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Should create a new todo by user id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should create a new todo by user id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userId).to.eql(100200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": 100200,\r\n    \"title\": \"My Title\",\r\n    \"completed\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Should create a new todo by user with specific title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should create a new todo by user with specific title\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userId).to.eql(100200);\r",
							"    pm.expect(jsonData.title).to.eql(\"My Title\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": 100200,\r\n    \"title\": \"My Title\",\r\n    \"completed\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Should change owner of todo by  todod id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should delete todo by id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userId).to.eql(100200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"completed\": true,\r\n    \"title\": \"My New title\",\r\n    \"userId\": 100200\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Should delete todo by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should delete todo by id\", function () {\r",
							"    pm.expect(pm.response.code).is.eql(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos/10",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos",
						"10"
					]
				}
			},
			"response": []
		},
		{
			"name": "Should mark todo as completed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should mark todo as completed\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.completed).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"completed\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Should change title of todo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should mark todo as completed\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql(\"New title\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"New title\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos",
						"1"
					]
				}
			},
			"response": []
		}
	]
}